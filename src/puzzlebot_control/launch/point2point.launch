<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="robot_name"  value="puzzlebot" />
  <param name="robot_description" command="$(find xacro)/xacro '$(find puzzlebot_gazebo)/urdf/puzzlebot_mod.xacro' prefix:=$(arg robot_name)/" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>        
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="odometry" pkg="puzzlebot_control" type="odom.py">
    <param name="robot_name" type="str" value="$(arg robot_name)" />    
  </node>
  <node name="bug2_algorithm" pkg="puzzlebot_control" type="bug2.py" output="screen"/>
  <node name="rosserial" pkg="rosserial_python" type="serial_node.py"/>
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
      <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>
      <param name="serial_baudrate"     type="int"    value="115200"/>
      <param name="frame_id"            type="string" value="world"/>
      <param name="inverted"            type="bool"   value="false"/>
      <param name="angle_compensate"    type="bool"   value="true"/>
  </node>
  <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 world $(arg robot_name)/base_link 100" />
  <node name="gmap" pkg="gmapping" type="slam_gmapping">
    <param name="scan" value="scan"/>
    <param name="~base_frame" value="$(arg robot_name)/base_link"/>
    <param name="~odom_frame" value="$(arg robot_name)/odom"/>
    <param name="~map_frame" value="world"/>

  </node>
</launch>
